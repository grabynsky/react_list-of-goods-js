{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortBy","setSortBy","isReverse","setIsReverse","goodsForSort","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SA2BVC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAOMC,EAlCiB,SAACC,EAAOL,EAAQE,GACvC,IAAMI,EAAY,UAAOX,GAqBzB,OAnBIK,GACFM,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAaM,UAGRN,EAYcO,CAAiBlB,EAAiBK,EAAQE,GAE/D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACAE,IAAG,SAAU,UAAW,CACtB,WAAYhB,IAAWJ,IAEzBqB,QAAS,kBAAMhB,EAAUL,IAN3B,iCAWA,wBACEmB,KAAK,SACLD,UACAE,IAAG,SAAU,aAAc,CACzB,WAAYhB,IAAWH,IAEzBoB,QAAS,kBAAMhB,EAAUJ,IAN3B,4BAWA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAad,IAEfe,QAAS,kBAAMd,GAAcD,IAL/B,sBAUEF,GAAUE,IACZ,wBACEa,KAAK,SACLD,UAAU,4BACVG,QA9CM,WACZhB,EAAU,IACVE,GAAa,IAyCT,sBAUF,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCvGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.76e2d240.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nconst getPreparedGoods = (goods, sortBy, isReverse) => {\n  const visibleGoods = [...goodsFromServer];\n\n  if (sortBy) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const reset = () => {\n    setSortBy('');\n    setIsReverse(false);\n  };\n\n  const goodsForSort = getPreparedGoods(goodsFromServer, sortBy, isReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n          cn('button', 'is-info', {\n            'is-light': sortBy !== SORT_BY_ALPHABET,\n          })}\n          onClick={() => setSortBy(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n          cn('button', 'is-success', {\n            'is-light': sortBy !== SORT_BY_LENGTH,\n          })}\n          onClick={() => setSortBy(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReverse,\n          })}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReverse) && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsForSort.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}